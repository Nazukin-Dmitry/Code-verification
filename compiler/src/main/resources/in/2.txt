declare function CreateFile(lpFileName as string,
                    dwDesiredAccess as int,
                    dwShareMode as int,
                    lpSecurityAttributes as int,
                    dwCreationDisposition as int,
                    dwFlagsAndAttributes as int,
                    hTemplateFile as int) as int
                    lib "kernel32.dll" alias "CreateFileA"

declare function WriteFile(hFile as int,
                   lpBuffer as string,
                   nNumberOfBytesToWrite as int,
                   lpNumberOfBytesWritten as int,
                   lpOverlapped as int) as int
                   lib "kernel32.dll"

declare function CloseHandle(hFile as int) as int lib "kernel32.dll"

declare function lstrlen(hFile as string) as int lib "kernel32.dll" alias "lstrlenA"

function main()
    f = CreateFile("out.txt", 0x40000000, 0, 0, 2, 0, 0);

    a = minus(5,2);
    print("a= " + a + "\n", f);

    a = new User(3, "Ivan");
    a.setId(4);
    increaseId(a);
    print("User= " + a.toString() +  "\n", f);

    a.setId("tratata");
    print("User= " + a.toString() +  "\n", f);

    a.sum("55","44",f);

    a.sum(55,44,f);

    a.sum(true,false,f);

    CloseHandle(f);

    main = 0;
end function

function print(text as string, handle)
    WriteFile(handle, text, lstrlen(text), 0, 0);
end function

function minus(A as long, B as long)
    minus = (A-B);
end function

function increaseId(user as User)
    user.setId(user.getId() + 1);
end function

class User
    private id, name

    public function toString()
        toString = "id: " + getId() + " name: " + name;
    end function

    public function getName()
        getName = name;
    end function

    public function setName(_name as string)
        name = _name;
    end function

    public function getId()
        getId = id;
    end function

    public function setId(newId)
        id = newId;
    end function

    public function New(_id as long, _name as string)
        id = _id;
        name = _name;
    end function

    public function New(_id as long)
        id = _id;
        name = "";
    end function

    public function sum(A as long, B as long, f)
        sum = A+B;
        print("long sum= " + sum + "\n", f);
    end function

    public function sum(A as string, B as string, f)
        sum = A+B;
        print("string sum= " + sum + "\n", f);
    end function

    public function sum(A as bool, B as bool, f)
        sum = A||B;
        print("bool sum= " + sum + "\n", f);
    end function

    public function less(A, B)
        less = A<B;
    end function
end class