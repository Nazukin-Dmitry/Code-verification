---Class---
Console
---fields---
0 : in - PRIVATE
1 : out - PRIVATE
---functions---
PUBLIC : MethodSignature{funcName='ReadConsole', argCount=5, argsType=[int, string, int, int, int], returnType=int} 
 .methodSignature
MethodSignature{funcName='ReadConsole', argCount=5, argsType=[int, string, int, int, int], returnType=int}
from kernel32.dll dllEntryName ReadConsoleA

PUBLIC : MethodSignature{funcName='GetStdHandle', argCount=1, argsType=[int], returnType=int} 
 .methodSignature
MethodSignature{funcName='GetStdHandle', argCount=1, argsType=[int], returnType=int}
from kernel32.dll dllEntryName GetStdHandle

PRIVATE : MethodSignature{funcName='SetConsoleMode', argCount=2, argsType=[int, int], returnType=int} 
 .methodSignature
MethodSignature{funcName='SetConsoleMode', argCount=2, argsType=[int, int], returnType=int}
from kernel32.dll dllEntryName SetConsoleMode

PUBLIC : MethodSignature{funcName='lstrlen', argCount=1, argsType=[string], returnType=int} 
 .methodSignature
MethodSignature{funcName='lstrlen', argCount=1, argsType=[string], returnType=int}
from kernel32.dll dllEntryName lstrlenA

PUBLIC : MethodSignature{funcName='Write', argCount=1, argsType=[string], returnType=undefined} 
 .methodSignature
MethodSignature{funcName='Write', argCount=1, argsType=[string], returnType=undefined}
.funcs
0:lstrlen
1:WriteFile
.vars_count
2
.consts
0:Const{constName='0', type=long}
1:Const{constName='0', type=long}
.programm
0: PUSHCLASSVAR 1 0 
1: PUSHVAR 1 1 
2: PUSHVAR 1 2 
3: CALL 2 0 2 
4: PUSHCONST 0 3 
5: PUSHCONST 1 4 
6: CALL 0 1 0 1 2 3 4 
7: END 

PUBLIC : MethodSignature{funcName='WriteConsole', argCount=5, argsType=[int, string, int, int, int], returnType=int} 
 .methodSignature
MethodSignature{funcName='WriteConsole', argCount=5, argsType=[int, string, int, int, int], returnType=int}
from kernel32.dll dllEntryName WriteConsoleA

PRIVATE : MethodSignature{funcName='WriteFile', argCount=5, argsType=[int, string, int, int, int], returnType=int} 
 .methodSignature
MethodSignature{funcName='WriteFile', argCount=5, argsType=[int, string, int, int, int], returnType=int}
from kernel32.dll dllEntryName WriteFile

PUBLIC : MethodSignature{funcName='New', argCount=0, argsType=[], returnType=undefined} 
 .methodSignature
MethodSignature{funcName='New', argCount=0, argsType=[], returnType=undefined}
.funcs
0:GetStdHandle
1:SetConsoleMode
.vars_count
1
.consts
0:Const{constName='11', type=long}
1:Const{constName='10', type=long}
2:Const{constName='0', type=long}
.programm
0: PUSHCONST 0 0 
1: UNMINUS 0 0 
2: CALL 0 0 0 
3: LOADCLASSVAR 0 1 
4: PUSHCONST 1 1 
5: UNMINUS 1 1 
6: CALL 1 0 1 
7: LOADCLASSVAR 1 0 
8: PUSHCLASSVAR 0 2 
9: PUSHCONST 2 3 
10: CALL 2 1 2 3 
11: END 

PUBLIC : MethodSignature{funcName='AllocConsole', argCount=0, argsType=[], returnType=int} 
 .methodSignature
MethodSignature{funcName='AllocConsole', argCount=0, argsType=[], returnType=int}
from kernel32.dll dllEntryName AllocConsole

PRIVATE : MethodSignature{funcName='ReadFile', argCount=5, argsType=[int, char, int, int, int], returnType=int} 
 .methodSignature
MethodSignature{funcName='ReadFile', argCount=5, argsType=[int, char, int, int, int], returnType=int}
from kernel32.dll dllEntryName ReadFile

PUBLIC : MethodSignature{funcName='Read', argCount=0, argsType=[], returnType=undefined} 
 .methodSignature
MethodSignature{funcName='Read', argCount=0, argsType=[], returnType=undefined}
.funcs
0:ReadFile
.vars_count
3
.consts
0:Const{constName='', type=string}
1:Const{constName=''g'', type=char}
2:Const{constName='1', type=long}
3:Const{constName='0', type=long}
4:Const{constName='0', type=long}
5:Const{constName=''n'', type=char}
.programm
0: PUSHCONST 0 0 
1: LOADVAR 0 1 
2: PUSHCONST 1 1 
3: LOADVAR 1 2 
4: PUSHCLASSVAR 0 2 
5: PUSHVAR 2 3 
6: PUSHCONST 2 4 
7: PUSHCONST 3 5 
8: PUSHCONST 4 6 
9: CALL 2 0 2 3 4 5 6 
10: PUSHVAR 1 3 
11: PUSHVAR 2 4 
12: ADD 3 4 3 
13: LOADVAR 3 1 
14: PUSHVAR 2 4 
15: PUSHCONST 5 5 
16: EQUAL 4 5 4 
17: JMPFALSE 4 4 
18: PUSHVAR 1 4 
19: LOADVAR 4 0 
20: END 

PUBLIC : MethodSignature{funcName='WriteLine', argCount=1, argsType=[string], returnType=undefined} 
 .methodSignature
MethodSignature{funcName='WriteLine', argCount=1, argsType=[string], returnType=undefined}
.funcs
0:lstrlen
1:WriteFile
.vars_count
2
.consts
0:Const{constName='\n', type=string}
1:Const{constName='\n', type=string}
2:Const{constName='0', type=long}
3:Const{constName='0', type=long}
.programm
0: PUSHCLASSVAR 1 0 
1: PUSHVAR 1 1 
2: PUSHCONST 0 2 
3: ADD 1 2 1 
4: PUSHVAR 1 2 
5: PUSHCONST 1 3 
6: ADD 2 3 2 
7: CALL 2 0 2 
8: PUSHCONST 2 3 
9: PUSHCONST 3 4 
10: CALL 0 1 0 1 2 3 4 
11: END 

--------------------
.methodSignature
MethodSignature{funcName='main', argCount=0, argsType=[], returnType=undefined}
.funcs
0:WriteLine
1:Read
.vars
0:main
1:textt
2:console
3:name
.consts
0:Const{constName='Enter your name', type=string}
1:Const{constName='Console', type=string}
2:Const{constName='Hello ', type=string}
.programm
0: PUSHCONST 0 0 
1: LOADVAR 0 1 
2: INITIALIZE 0 1 
3: LOADVAR 0 2 
4: PUSHVAR 2 1 
5: PUSHVAR 1 2 
6: CALLOBJECTFUN 2 1 0 2 
7: PUSHVAR 2 3 
8: CALLOBJECTFUN 4 3 1 
9: LOADVAR 4 3 
10: PUSHVAR 2 5 
11: PUSHCONST 2 6 
12: PUSHVAR 3 7 
13: ADD 6 7 6 
14: CALLOBJECTFUN 6 5 0 6 
15: END 
--------------------
